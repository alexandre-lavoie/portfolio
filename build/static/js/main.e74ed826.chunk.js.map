{"version":3,"sources":["images/Trees.png","images/Cloud.png","Home/Home.module.css","Home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","titleContainer","title","email","gitHub","linkedIn","itchIo","trees","cloud","cloudMove","logo","linkContainer","home","aboutMe","projects","experience","COLORS","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","titleHover","colorIndex","width","heigth","updateWindowDimensions","bind","assertThisInitialized","window","addEventListener","removeEventListener","setState","innerWidth","height","innerHeight","length","_this2","react_default","a","createElement","Fragment","Grid","container","className","style","item","justify","alignItems","xs","spacing","onClick","open","IconButton","color","Menu_default","viewBox","fill","xmlns","cx","cy","r","d","fillRule","clipRule","onMouseEnter","changeColor","onMouseLeave","id","x1","y1","x2","y2","gradientUnits","stopColor","offset","backgroundImage","concat","Trees","map","i","src","Cloud","alt","top","animationDelay","position","bottom","backgroundColor","Component","App","Home_Home","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e74ed826.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Trees.3b2ca3eb.png\";","module.exports = __webpack_public_path__ + \"static/media/Cloud.10fdb4a0.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleContainer\":\"Home_titleContainer__3FN53\",\"title\":\"Home_title__F6Jh3\",\"email\":\"Home_email__xWQf8\",\"gitHub\":\"Home_gitHub__1em1s\",\"linkedIn\":\"Home_linkedIn__1XJmi\",\"itchIo\":\"Home_itchIo__15DTe\",\"trees\":\"Home_trees__30L3h\",\"cloud\":\"Home_cloud__6F7QY\",\"cloudMove\":\"Home_cloudMove__3NYGp\",\"logo\":\"Home_logo__Idlhs\",\"linkContainer\":\"Home_linkContainer__2NfRs\",\"home\":\"Home_home__ERxKX\",\"aboutMe\":\"Home_aboutMe__3kdf_\",\"projects\":\"Home_projects__2HJFY\",\"experience\":\"Home_experience__2X8G4\"};","/**\r\n * Home Description.\r\n * @class Home\r\n */\r\n\r\n// React\r\nimport React, { Component } from 'react';\r\nimport { Grid, IconButton } from '@material-ui/core';\r\n\r\n// Icons\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\n// Images\r\nimport Trees from '../images/Trees.png';\r\nimport Cloud from '../images/Cloud.png';\r\n\r\n// CSS\r\nimport style from './Home.module.css';\r\n\r\nconst MIN_WIDTH = 750;\r\nconst MIN_WIDTH_HEADER = 875;\r\nconst MIN_HEIGHT = 600;\r\nconst COLORS = ['#D9C343', '#AD73BB', '#518FB6', '#BF8E7B'];\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            titleHover: false,\r\n            colorIndex: 0,\r\n            width: 0,\r\n            heigth: 0\r\n        }\r\n\r\n        this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions() {\r\n        this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    }\r\n\r\n    changeColor() {\r\n        this.setState({titleHover: true, colorIndex: ((this.state.colorIndex >= COLORS.length - 1) ? 0 : this.state.colorIndex + 1)});\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Grid container>\r\n                {\r\n                    (() => {\r\n                        if (this.state.width >= MIN_WIDTH_HEADER) {\r\n                            return (\r\n                                <Grid className={style.linkContainer} item container justify=\"flex-start\" alignItems=\"center\" xs spacing={2}>\r\n                                    <Grid item />\r\n                                    <Grid item>\r\n                                        <span className={style.home}>Home</span>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <span onClick={() => window.open(\"https://www.linkedin.com/in/alexandre-lavoie-00/\", \"_blank\")} className={style.aboutMe}>About Me</span>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <span onClick={() => window.open(\"https://github.com/alexandre-lavoie\", \"_blank\")} className={style.projects}>Projects</span>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <span onClick={() => window.open(\"https://www.linkedin.com/in/alexandre-lavoie-00/\", \"_blank\")} className={style.experience}>Experience</span>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <Grid container item justify=\"flex-start\" xs spacing={1}>\r\n                                    <Grid item>\r\n                                        <IconButton style={{ color: '#C8C1C4' }}>\r\n                                            <MenuIcon />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    <Grid item />\r\n                                </Grid>\r\n                            )\r\n                        }\r\n                    })()\r\n                }\r\n\r\n                <Grid item container justify=\"flex-end\" xs>\r\n                    <Grid item>\r\n                        <IconButton onClick={() => window.open(\"https://www.linkedin.com/in/alexandre-lavoie-00/\", \"_blank\")}>\r\n                            <svg className={style.linkedIn} width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <circle cx=\"25\" cy=\"25\" r=\"25\" fill=\"#518FB6\" />\r\n                                <path d=\"M19.065 16.7083C19.065 17.9742 18.0475 19 16.7917 19C15.5358 19 14.5183 17.9742 14.5183 16.7083C14.5183 15.4433 15.5358 14.4167 16.7917 14.4167C18.0475 14.4167 19.065 15.4433 19.065 16.7083ZM19.0833 20.8333H14.5V35.5H19.0833V20.8333ZM26.4002 20.8333H21.8462V35.5H26.4011V27.8009C26.4011 23.5201 31.9277 23.1699 31.9277 27.8009V35.5H36.5V26.2132C36.5 18.9899 28.3215 19.253 26.4002 22.8087V20.8333Z\" fill=\"#C8C1C4\" />\r\n                            </svg>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton onClick={() => window.open(\"https://github.com/alexandre-lavoie\", \"_blank\")}>\r\n                            <svg className={style.gitHub} width=\"50\" height=\"51\" viewBox=\"0 0 50 51\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <circle cx=\"25\" cy=\"26\" r=\"25\" fill=\"#C4C4C4\" />\r\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M25 0C11.1875 0 0 11.4705 0 25.6323C0 36.9747 7.15625 46.5547 17.0937 49.951C18.3437 50.1753 18.8125 49.4063 18.8125 48.7335C18.8125 48.1247 18.7813 46.1062 18.7813 43.9595C12.5 45.145 10.875 42.3895 10.375 40.9477C10.0937 40.2107 8.875 37.9359 7.8125 37.3271C6.9375 36.8465 5.6875 35.661 7.78125 35.629C9.75 35.5969 11.1563 37.4873 11.625 38.2563C13.875 42.1332 17.4688 41.0438 18.9063 40.3709C19.125 38.7048 19.7812 37.5834 20.5 36.9426C14.9375 36.3018 9.125 34.091 9.125 24.2866C9.125 21.4991 10.0938 19.1922 11.6875 17.398C11.4375 16.7571 10.5625 14.1298 11.9375 10.6054C11.9375 10.6054 14.0313 9.93253 18.8125 13.2327C20.8125 12.656 22.9375 12.3676 25.0625 12.3676C27.1875 12.3676 29.3125 12.656 31.3125 13.2327C36.0938 9.90049 38.1875 10.6054 38.1875 10.6054C39.5625 14.1298 38.6875 16.7571 38.4375 17.398C40.0313 19.1922 41 21.4671 41 24.2866C41 34.1231 35.1563 36.3018 29.5938 36.9426C30.5 37.7436 31.2813 39.2816 31.2813 41.6846C31.2813 45.1129 31.25 47.8684 31.25 48.7335C31.25 49.4063 31.7188 50.2074 32.9688 49.951C42.8438 46.5547 50 36.9426 50 25.6323C50 11.4705 38.8125 0 25 0Z\" fill=\"#AD73BB\" />\r\n                            </svg>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton onClick={() => window.open(\"https://alexandre-lavoie.itch.io/\", \"_blank\")}>\r\n                            <svg className={style.itchIo} width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <circle cx=\"25\" cy=\"25\" r=\"25\" fill=\"#BF8E7B\" />\r\n                                <path d=\"M12.0659 9.62964L7.77783 15.029V16.541C7.77783 20.8601 14.7811 20.8601 14.7811 16.541C14.7811 20.8601 21.4984 20.8601 21.4984 16.541C21.4984 20.8601 28.5017 20.8601 28.5017 16.541C28.5017 20.8601 35.2197 20.8601 35.2197 16.541C35.2197 20.8601 42.2223 20.8601 42.2223 16.541V15.029L37.9349 9.62964H12.0659ZM14.7105 19.1326C14.4959 19.4207 14.2813 19.6362 14.0673 19.8524C13.2816 20.5003 12.2805 20.7883 11.2802 20.7883C10.9942 20.7883 10.7083 20.7883 10.4944 20.7165V40.3704H39.4372V20.7165C39.1513 20.7883 38.9366 20.7883 38.6507 20.7883C37.6504 20.7883 36.65 20.5003 35.8635 19.8524C35.6496 19.6362 35.435 19.42 35.2211 19.1326C35.0058 19.4207 34.8625 19.6362 34.5773 19.8524C33.7908 20.5003 32.7911 20.7883 31.8614 20.7883C30.8617 20.7883 29.8607 20.5003 29.1455 19.8524C28.9316 19.6362 28.717 19.42 28.5024 19.1326C28.2878 19.4207 28.0738 19.6362 27.8592 19.8524C26.9309 20.5721 25.9298 20.8601 24.9294 20.8601C23.9291 20.8601 22.9287 20.5721 22.1423 19.9242C21.9276 19.708 21.7137 19.4925 21.4991 19.2045C21.2845 19.4925 21.1419 19.7087 20.856 19.9242C20.0695 20.5721 19.0692 20.8601 18.1401 20.8601C17.1397 20.8601 16.1394 20.5721 15.4249 19.9242C15.2103 19.708 14.9964 19.4925 14.7818 19.2045L14.7105 19.1326V19.1326ZM18.5693 22.0841C20.2128 22.0841 20.9273 22.5165 21.785 24.244H28.1451C28.5031 22.5165 29.2175 22.0841 31.3616 22.0841C33.0044 22.0841 35.7915 23.6679 36.2208 25.8997L38.3648 34.3231C38.7933 36.483 37.5791 38.0661 35.435 38.0661C33.9341 38.0661 32.0047 37.0583 30.7191 34.3231H19.2838C17.9975 37.1302 16.0681 38.0661 14.5672 38.0661C12.4231 38.0661 11.2082 36.4823 11.6374 34.3231L13.7814 25.8997C14.2099 23.6679 16.9971 22.0841 18.6406 22.0841H18.5693V22.0841ZM24.9294 25.0356L19.8556 30.435H21.9996V33.1702H27.9312V30.5075H30.0746L24.9294 25.0356Z\" fill=\"#C8C1C4\" />\r\n                            </svg>\r\n                        </IconButton>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <IconButton onClick={() => window.open(\"mailto:alexandre.lavoie00@gmail.com\", \"_blank\")}>\r\n                            <svg className={style.email} width=\"50\" height=\"50\" viewBox=\"0 0 50 50\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M25 50C38.8071 50 50 38.8071 50 25C50 11.1929 38.8071 0 25 0C11.1929 0 0 11.1929 0 25C0 38.8071 11.1929 50 25 50ZM7.8957 12.25L24.4375 25.7403L40.9807 12.25H7.8957ZM7.875 15.8083L16.9499 23.2097L7.875 33.1708V15.8083ZM41 33.1708L31.9251 23.2097L41 15.8083V33.1708ZM24.4375 29.3153L29.7761 24.9611L40.9696 37.25H7.90536L19.0989 24.9611L24.4375 29.3153Z\" fill=\"#D9C343\" />\r\n                            </svg>\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container className={style.titleContainer}>\r\n                <Grid container justify=\"center\" item xs={12}>\r\n                    <span\r\n                        onMouseEnter={() => this.changeColor()}\r\n                        onMouseLeave={() => this.setState({ titleHover: false })}\r\n                        style={{ color: (this.state.titleHover) ? COLORS[this.state.colorIndex] : \"#C8C1C4\" }}\r\n                        className={style.title}\r\n                    >\r\n                        Alexandre Lavoie\r\n                    </span>\r\n                </Grid>\r\n                <Grid container justify=\"center\" item xs={12}>\r\n                    <svg className={style.logo} width=\"100\" height=\"45\" viewBox=\"0 0 100 45\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M34.6698 18.9151C39.7498 18.9151 43.8679 14.6808 43.8679 9.45757C43.8679 4.2343 39.7498 0 34.6698 0C32.4035 0 30.3286 0.842773 28.7254 2.24015C26.3517 1.44038 23.761 1.04047 20.9531 1.0404C14.6999 1.04047 9.63186 3.18169 5.74887 7.46408C1.91628 11.7466 -4.84081e-06 16.8804 0 22.8654C-4.84081e-06 29.2633 1.81542 34.5519 5.44629 38.7311C9.12757 42.9104 14.2461 45 20.8018 45C25.9455 45 30.4589 43.8907 34.3419 41.6721C38.2249 39.4535 43.4442 35.0163 50 28.3604L55.8962 22.8654C59.88 19.4085 62.3297 16.6224 65.2042 14.6617C68.0786 12.6495 70.5496 11.2564 72.6172 10.4824C74.6847 9.65695 76.828 9.24419 79.0469 9.24413C82.9802 9.24419 86.132 10.5857 88.5023 13.2686C90.9227 15.9 92.133 19.2538 92.1331 23.3298C92.133 27.0447 90.9227 30.2179 88.5023 32.8492C86.0816 35.429 82.7281 36.7189 78.4417 36.7189C76.1771 36.7189 73.9015 36.3026 71.6149 35.47C71.6698 35.0523 71.6981 34.626 71.6981 34.1928C71.6981 28.9695 67.58 24.7352 62.5 24.7352C57.42 24.7352 53.3019 28.9695 53.3019 34.1928C53.3019 39.416 57.42 43.6503 62.5 43.6503C64.1545 43.6503 65.7069 43.2012 67.0483 42.4151C70.6368 44.1384 74.712 45 79.2738 45C83.3585 45 86.9641 44.0971 90.0908 42.2912C93.2677 40.4854 95.7135 37.8282 97.4281 34.3197C99.1426 30.8112 99.9999 26.9931 100 22.8654C99.9999 16.8288 98.0584 11.695 94.1755 7.46408C90.3428 3.18169 85.3 1.04047 79.0469 1.0404C76.0715 1.04047 73.3232 1.50483 70.8018 2.43349C68.2803 3.36228 65.179 5.21972 61.4977 8.00583C57.8164 10.7405 53.9838 14.0684 50 17.9896L45.0832 22.788C39.7377 28.154 35.3504 31.8173 31.9213 33.7779C28.4921 35.7386 24.9621 36.7189 21.3313 36.7189C18.5577 36.7189 16.238 36.1772 14.3722 35.0936C12.5567 34.0101 11.0186 32.4881 9.75794 30.5274C8.49721 28.5668 7.86686 26.1676 7.86687 23.3298C7.86686 19.2538 9.07714 15.9 11.4977 13.2686C13.9183 10.6373 16.9692 9.32158 20.6505 9.32152C22.3487 9.32156 23.959 9.5128 25.4814 9.89523C25.7038 14.9153 29.7325 18.9151 34.6698 18.9151ZM34.6698 14.1864C37.2098 14.1864 39.2689 12.0692 39.2689 9.45757C39.2689 6.84593 37.2098 4.72879 34.6698 4.72879C32.1298 4.72879 30.0708 6.84593 30.0708 9.45757C30.0708 12.0692 32.1298 14.1864 34.6698 14.1864ZM67.0991 34.1928C67.0991 36.8044 65.04 38.9216 62.5 38.9216C59.96 38.9216 57.9009 36.8044 57.9009 34.1928C57.9009 31.5811 59.96 29.464 62.5 29.464C65.04 29.464 67.0991 31.5811 67.0991 34.1928Z\" fill=\"url(#paint0_linear)\" />\r\n                        <defs>\r\n                            <linearGradient id=\"paint0_linear\" x1=\"2.87721e-07\" y1=\"23\" x2=\"100\" y2=\"23\" gradientUnits=\"userSpaceOnUse\">\r\n                                <stop stopColor=\"#518FB6\" />\r\n                                <stop offset=\"0.333332\" stopColor=\"#D9C343\" />\r\n                                <stop offset=\"0.666667\" stopColor=\"#BF8E7B\" />\r\n                                <stop offset=\"1\" stopColor=\"#AD73BB\" />\r\n                            </linearGradient>\r\n                        </defs>\r\n                    </svg>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <div className={style.trees} style={{ backgroundImage: `url(${Trees})` }} />\r\n\r\n            {\r\n                (() => {\r\n                    if (this.state.width >= MIN_WIDTH && this.state.height >= MIN_HEIGHT) {\r\n                        return (\r\n                            <div>\r\n                                {[0, 1, 2, 3].map((i) => <img src={Cloud} alt='cloud' className={style.cloud} style={{ top: (i % 2 === 0) ? '15vh' : '7vh', animationDelay: `-${i * 5}s` }} />)}\r\n                            </div>\r\n                        )\r\n                    }\r\n                })()\r\n            }\r\n\r\n            <Grid container alignItems=\"center\" justify=\"center\" style={{ position: \"absolute\", bottom: 0, height: \"35px\", backgroundColor: \"#373636\" }}>\r\n                <Grid item />\r\n            </Grid>\r\n        </>\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Home from './Home';\n\nfunction App() {\n  return (\n      <>\n        <Home />\n      </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}